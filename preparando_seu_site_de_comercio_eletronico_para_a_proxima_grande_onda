permalink: preparando_seu_site_de_comercio_eletronico_para_a_proxima_grande_onda
audit_date:-pt
title: Preparando seu site de comércio eletrônico para a próxima grande onda
type: article
created_date: '2011-03-16'
created_by: Rackspace Support
last_modified_date: '2016-05-20'
last_modified_by: 
product: Digital
product_url: ecommerce-hosting

A maioria dos varejistas estão familiarizados com a correria das festas de fim de ano. Em lojas físicas, é a época do ano onde mais ocorrem contratações para garantir rostos sorridentes na loja e ajudar os ansiosos clientes a passarem suas compras nos caixas de forma rápida e sem stress. Para um varejista de comércio eletrônico, a preparação para períodos de picos de tráfego como este não envolve tanto a contratação de mais funcionários, mas sim o ajuste dos sistemas e processos que disponibilizam, mantêm e permitem que os clientes façam suas transações de forma tranquila em seu site.
Atrasos no carregamento de páginas não só frustram os usuários, mas também geram impacto na demanda, pois os algoritmos de busca do Google agora também penalizam sites com cargas lentas. Veja a temporada de férias — as vendas têm começado cada vez mais e mais cedo a cada ano, com alguns varejistas oferecendo ofertas já em outubro ou início de novembro. De acordo com uma pesquisa da Shop.org realizada com compradores em 2013, mais de 40 por cento disseram que começaram suas compras em Outubro ou antes. Juntamente com o crescimento global das vendas online, essas estatísticas aumentam ainda mais a necessidade de uma estratégia bem planejada de comércio eletrônico, tanto do lado voltado para o cliente como para a sua infraestrutura subjacente.
Preparar-se para um período de pico, seja nas festas de fim de ano, época de turismo no verão ou uma campanha de marketing abrangente, envolve a avaliação de sua infraestrutura e do código para otimizá-los rumo aos melhores resultados. A pedra fundamental do planejamento de tráfego de pico é realizar rigorosamente testes de carga de seu sistema com antecedência suficiente para você identificar e corrigir gargalos e pontos de interrupção.
1. Teste Seu Site Antes de um Pico de Tráfego
Testes de carga fornecem uma visão clara de como seu site irá se comportar quando chegar os picos de tráfego. As etapas a seguir mostram as etapas de alto nível envolvidas em testes de carga.
1.	Determine os objetivos do teste: O teste inicial deve ser um teste completo, de ponta a ponta. Testes de acompanhamento podem abranger apenas o teste pós-otimização de páginas ou processos específicos. Além disso, tenha em mente que diferentes tipos de usuários usam seu site de diferentes formas. Um comprador de computador pode ser dividido em segmentos como consumidores, empresas e governo. O usuário consumidor teoricamente toma um caminho diferente do que um usuário do governo, portanto, uma carga diferente no sistema necessitará de otimização. Ao definir de forma mais restrita os objetivos do teste e os tipos de usuários, você obterá resultados mais claros para orientar a otimização. Use seus objetivos para criar uma lista de perguntas que seu teste precisa responder, como por exemplo:• Quantas solicitações simultâneas meu sistema pode tratar na carga máxima?
• Os tempos de resposta para todos os caminhos do teste são aceitáveis?
• Que pontos na cadeia estão consumindo mais recursos de hardware?
• Existem falhas óbvias causadas por grandes conjuntos de dados, vários usuários simultâneos, grande quantidade de produtos no site, por alguma funcionalidade do carrinho de compras ou outros fatores?
• Existe algo óbvio para otimizar? Exemplos: consultas desnecessárias ao banco de dados, caminhos de código usados com frequência que produzem um resultado consistente ou consultas realizadas de forma repetida e frequente ao banco de dados e que poderiam ser armazenadas em cache.
2.	Comece com um benchmark, uma linha base: Revise os logs e as análise do site para ver como ele se comporta durante períodos de pico anteriores e determinar como é uma típica carga de pico. Use ferramentas como Apache Bench ou AutoBench para simular vários usuários simultâneos para uma referência de quantas solicitações por segundo você é capaz de servir. Preste especial atenção em páginas de alto tráfego, como a página inicial e landing pages, onde os esforços de otimização garantem uma maior recompensa. Para comparar seu desempenho e definir benchmarks alinhados com outros varejistas, dê uma olhada no Índice de Desempenho de Sites Móveis e de Varejo na Web da Compuware.
3.	Determine os métodos de coleta de dados: Uma coleta de dados organizada é essencial para o entendimento de resultados e o aprendizado a partir deles. A LoadRunner é uma ferramenta de software que fornece uma formatação sofisticada, grande flexibilidade e análises interessantes. O Microsoft Visual Studio tem um script SQL para a criação de um repositório de banco de dados para armazenar os resultados. Avalie uma ferramenta de coleta de dados de teste com base na sua capacidade de:• Documente exaustivamente as condições de teste
• Documente com precisão os resultados
• Ofereça uma análise direta dos resultados
• Arquive dados de teste para comparações futuras
Use um conjunto de ferramentas de monitoramento para obter dados precisos sobre o desempenho real do teste em gráficos simples e visuais:
• Cacti para capturar métricas
• MONyog para monitorar o banco de dados
• statsd para colocar o log das estatísticas no código para monitorar o desempenho do código em tempo real
4.	Crie scripts: Scripts geram dados de teste e simulam a interação do usuário. Os scripts inundam o site com solicitações para que você possa identificar gargalos que ocorrem apenas durante períodos de tráfego pesado. Um script deve ser feito para cada caminho de teste, cookies e todo o restante. JMeter é um software de teste de carga open source, projetado para testar o comportamento funcional do teste e medir o desempenho. Os scripts JMeter são fáceis de tornar modelos e podem ser copiados e colados para a criação de novos. Os scripts comuns incluem:• Criar aleatoriamente produtos
• Criar aleatoriamente pedidos (encher um carrinho, em seguida fazer check-out)
• Criar aleatoriamente contas de clientes (você pode combinar isso com a criação de um script de pedidos)
• Fazer alterações na interface administrativa (criar categorias, alterar configurações)
Esses scripts podem ser executados tanto individualmente como simultaneamente para encontrar limites de desempenho.
5.	Defina o ambiente de teste: Na prática, o ambiente de teste de carga contém:• Ferramentas de software para o envio de lotes de solicitações
• Scripts para simular a atividade do usuário no site
• Scripts para gerar quantidades em massa de dados no sistema
• Hardware para executar ferramentas
• Planilhas para acompanhar e analisar resultados
O teste pode durar dias a cada vez e usar recursos valiosos. O teste de carga é uma maneira comum de evitar o uso de recursos adicionais para executar testes ou degradar outros aplicativos durante o teste. Usar a nuvem para o teste significa que você pode alocar tanta CPU quanto necessário para executar testes pelo tempo que você precisar e então desprovisionar esses recursos quando os testes estiverem concluídos.
6.	Execute o teste: Como a execução dos testes pode ser muito demorada, obtenha o máximo de informações possíveis a cada teste realizado para evitar ter de repetir o mesmo teste. Para fazer isso, crie uma planilha com as seguintes informações:• Nome da pessoa executando o teste
• Data, hora e duração da execução
• Hipótese claramente definida
• Uma declaração do que mudou
• Um conjunto de métricas sendo controladas durante o teste
• Uma captura pós-execução dos resultados das métricas, melhores visualizadas com um gráfico ao longo do tempo
Salvando essas informações em planilhas, você alcançará resultados demonstráveis e poderá identificar os testes mais eficazes.
Após a conclusão do teste, você deve ter um conjunto de dados que responda as perguntas estabelecidas quando as metas foram definidas no início. As respostas guiarão seus próximos passos para otimização. Após a otimização, é crítico realizar o teste novamente em busca de quaisquer anomalias que a otimização possa criar, pois ao corrigir um problema às vezes outro pode problema pode ser criado, que você não quer esperava, e você não quer estar no meio do período de pico para descobrir.
2. Soluções para Problemas Comuns Que os Testes Revelam
INCORPORE BALANCEADORES DE REDE
Se os relatórios de tráfego do site revelam um aumento no número de conexões recusadas durante o teste de carga, é hora de reavaliar a sua solução de balanceamento de carga. Conexões recusadas são o primeiro sinal de que sua capacidade de servir é muito pequena para a quantidade de tráfego que seu site recebe. O próximo sinal provavelmente será visitantes ligando ou enviando queixas informando que não podem acessar ou fazer transações no seu site.
O número de balanceadores de carga que você implanta é determinado por suas metas de desempenho e tráfego; não há nenhuma fórmula mágica. Usar os dados do teste de carga irá ajudá-lo a determinar o número e a localização dos balanceadores de carga. Uma vez instalados, rode novamente o teste para confirmar que o balanceamento de carga pode manipular a carga esperada.
MELHOR COMPRESSÃO
Implementar compressão do lado do servidor pode reduzir o tamanho de suas páginas da loja, reduzindo o tempo para retornar os dados do servidor e tornando o processo do servidor web disponível mais cedo. Servidores web e navegadores mais modernos são capazes de compactar dados para enviar e descompactar no destino. Isto ajuda a reduzir os requisitos de largura de banda, mas pode aumentar as cargas de CPU.
Arquivos menores levam a tempos de carregamento de página mais rápidos. As duas opções mais comuns aqui são minimizar seu CSS e JavaScript, removendo espaços em branco e aumentando a legibilidade (usando uma ferramenta como a YUI Compressor) e reduzir o tamanho de suas imagens, retirando dados desnecessários com uma ferramenta como a Smush.it.
PRECISO DE UMA REDE DE DISTRIBUIÇÃO DE CONTEÚDO (CDN)
Usar uma CDN pode ajudar a acelerar o carregamento de páginas lentas. Em uma CDN, a primeira vez que um conteúdo é servido para um usuário, uma cópia do conteúdo é armazenada em servidores de borda geograficamente mais próximos do usuário. As solicitações subsequentes usam a cópia armazenada, resultando em tempo de carregamento mais rápido. A hospedagem de landing pages e outras páginas estáticas de alto tráfego em uma CDN ajuda a manter uma presença persistente e consistente na web. Quanto mais pessoas visitam seu site, mais sua página será armazenada em todo o mundo e, como resultado, os tempos de carga irão melhorar.
A publicação de conteúdo estático em uma CDN em vez do servidor web pode ser facilmente conseguida com serviços como o Rackspace Cloud Files, construído com tecnologia de CDN da Akamai. O W3 Total Cache e o PressFlow também têm tecnologia incorporada de CDN.
PRECISO DE CÓDIGO MAIS EFICIENTE.
Há muitos serviços associados com o comércio eletrônico e mídias sociais que podem fornecer código para você colocar em todo o site ou em páginas particulares. Esses trechos de código, usados para compartilhamento social, análises, widgets, etc., são escritos em HTML/JavaScript. Muitos usam solicitações externas para terceiros, que atrasam e não podem ser armazenadas em cache em sua extremidade. Sempre que possível, escolha soluções para elementos comuns de página que evitam código de terceiros. Outra solução comum para JavaScript problemático é carregar o código em um documento pronto (quando o DOM está totalmente carregado), ao invés de incluí-lo no sua marcação diretamente.
Sites com alta demanda por bancos de dados podem beneficiar-se de otimizações de banco de dados, como alterações de esquema e indexação de colunas mais solicitadas. Evite o uso de bibliotecas e frameworks inchados.
PRECISO DE CACHE DE PÁGINA INTEIRA
O Cache é uma maneira fácil de acelerar seu aplicativo ou site e pode ajudar a melhorar sua taxa de rejeição, salvando-o da potencial perda de receita. Determine quais dados você acessa com frequência e coloque-os em cache na memória para acesso de alta velocidade a eles. Se seu aplicativo está gerando conteúdo estático para páginas da web ou armazenando sessões em caches, você tem que decidir como armazenar os caches. Você pode armazená-los em seu sistema de arquivos local ou utilizar caches de memória distribuídos como clusters memcached.
PRECISO DE ESCALABILIDADE AUTOMÁTICA
Apesar de seus melhores esforços de planejamento, seu site ainda pode experimentar picos de capacidade fora do planejado. Por exemplo, um site pode tipicamente ser executado em dois servidores e ocasionalmente picos de tráfego podem exigir um terceiro servidor. Se esse pico for previsível, sua equipe pode atuar antes para configurar o servidor extra e encerrá-lo quando já não for mais necessário.
Se esse pico é imprevisível, você pode ser forçado a manter um terceiro servidor para cobrir aquele pico de tráfego quando ou se isso acontecer. Com uma ferramenta de escalabilidade automática, como a de um parceiro do Marketplace de Ferramentas de Nuvem da Rackspace, a RightScale, você não precisa manter aquele terceiro servidor. Configurando o tráfego, desempenho ou outras variáveis, o terceiro servidor é iniciado somente quando necessário e automaticamente desativado quando diminuem os parâmetros definidos. Para mais informações sobre ferramentas de escalabilidade automática acesse o Marketplace de Ferramentas de Nuvem da Rackspace.
PRECISO DE UMA NUVEM HÍBRIDA
Muitos ainda pensam que se eles não podem ir totalmente para a nuvem, eles não podem usar nada da nuvem. Não funciona assim. Uma configuração de nuvem híbrida permite que você compre o básico e alugue para o pico. Você é capaz de colocar os elementos que precisa para executar o seu site agora com a capacidade de expandir para a nuvem em picos de tráfego ou expandir a funcionalidade sem mudança na arquitetura ou nas plataformas.
Com a Nuvem Híbrida, uma loja de comércio eletrônico pode bater as eficiências da nuvem para caching, armazenamento de vídeo e imagem, ou outros elementos de uso intensivo de recursos e não críticos, mantendo outros elementos como o processamento de pagamentos e outros elementos sensíveis à segurança em uma nuvem privada ou no no ambiente local para atender a conformidade PCI e outras questões.
3. Planeje Para o Sucesso no Pico com a Rackspace
Quando a marca de estilo de vida Alex & Ani fez uma campanha no Super Bowl 2014, a empresa sabia que o desempenho do site era fundamental. “Cada segundo custa dinheiro. Por cada segundo que você adiciona ao processo de carregamento, você reduz sua taxa de conversão em 7 por cento, e isso é crítico”, disse Ryan Bonifacio, vice-presidente de estratégia digital da Alex & Ani. O anúncio trouxe 28.000 pessoas ao site da Alex & Ani e qualquer atraso no carregamento teria sido desastroso. Bonifacio veio para a Rackspace porque ele estava procurando por um parceiro de hospedagem com a experiência em desempenho necessária. “Maximizar o tempo de atividade foi um dos nossos maiores requisitos na diligência com provedores de hospedagem. A Rackspace foi avaliada no topo”, disse ele.
O Ambiente de Hospedagem de Comércio Eletrônico da Rackspace é projetado para oferecer suporte a clientes com recursos facilmente escalonáveis de pequenos a grandes volumes de tráfego. Podemos ajudar você com a tecnologia necessária para desenvolver, testar e escalar seu site para gerenciar e otimizar períodos de pico, em vez de perder clientes.

